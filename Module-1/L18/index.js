// #1
function myRegExp(str) {
    const regex = /^[a-zA-Z0-9_$]+$/;
    return regex.test(str);
  }
console.log(myRegExp('привет')); // false

// #2
// ,: Символ запятой. Это означает, что мы ищем запятую в строке.
// 0: Символ нуля. После запятой мы ищем ноль.
// ,: Еще одна запятая. После нуля мы снова ищем запятую.
// \d{2}: Две цифры. \d обозначает любую цифру (от 0 до 9), а {2} указывает на то, что мы ищем ровно две цифры.
const regex2 = /,0,\d{2};/;
console.log('762120,0,22;763827,0,50;750842,0,36;749909,0,95;755884,0,41;'.split(regex2))

// #3
// "[a-zA-Z0-9_]+": Захватываемая группа для ключа в кавычках.
// \s*:\s*: Двоеточие с возможными пробелами.
// ([^,}]+): Захватываемая группа для значения, которое не содержит запятых и закрывающих фигурных скобок.
const regex3 = /"([a-zA-Z0-9_]+)"\s*:\s*([^,}]+)/g;
// [['"a": 1', 'a', '1'], ['"b": "2"', 'b', '"2"']]
// Итератор map на основе строки
console.log([...'{"a": 1, "b": "2"}'.matchAll(regex3)].map((res) => [res[0], res[1], res[2]]));
